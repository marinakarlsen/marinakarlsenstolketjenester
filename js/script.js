const lang = localStorage.getItem("language") || "no";

//Spr√•kdata for nettsiden
const translations = {
    no: {
        // Skjemafelt og meldinger
        header: "Bestill tolketjeneste",
        datoLabel: "Dato:",
        starttidLabel: "Starttid:",
        sluttidLabel: "Sluttid:",
        adresseLabel: "Adresse (hvis oppm√∏te):",
        oppdragstypeLabel: "Oppdragstype:",
        temaLabel: "Overordnet tema/felt:",
        kundeinfoLabel: "Kundeinformasjon:",
        epostLabel: "E-post:",
        telefonLabel: "Telefon:",
        notaterLabel: "Notater:",
        sendButton: "Send foresp√∏rsel",
        formSuccess: "Bestillingen din har blitt sendt!",

        // Navigasjon
        navBestill: "Bestill tolketjeneste",
        navTjenester: "Tjenester",
        navOmMeg: "Om meg",
        navTilbakemeldinger: "Tilbakemeldinger",
        navBetingelser: "Betingelser",
        navKontakt: "Kontakt",

        // Oppdragstyper
        oppdragstelefon: "Telefontolking",
        oppdragsskjerm: "Skjermtolking",
        oppdragsoppm√∏te: "Personlig oppm√∏te",

        // Tjenester-seksjonen
        tjenesterHeader: "Tjenester",
        tjenesterTelefon: "Telefontolking",
        tjenesterTelefonDesc: "Effektiv l√∏sning for situasjoner hvor personlig oppm√∏te ikke er n√∏dvendig.",
        tjenesterSkjerm: "Skjermtolking",
        tjenesterSkjermDesc: "Praktisk og fleksibelt for m√∏ter og konferanser via videoplattformer.",
        tjenesterOppmote: "Personlig oppm√∏te",
        tjenesterOppmoteDesc: "For situasjoner som krever tilstedev√¶relse og n√¶rhet for maksimal effektivitet.",

        // Tilbakemeldinger
        tilbakemeldingerHeader: "Tilbakemeldinger",
        feedbackIntro: "Se hva kundene sier om mine tjenester:",

        // Kontakt-seksjonen
        kontaktHeader: "Kontakt",
        kontaktText: "Ta gjerne kontakt via e-post eller telefon:",

        // Betingelser-siden
        betingelserHeader: "Vilk√•r og betingelser",
        betingelserBestilling: "1. Bestilling og avbestilling",
        betingelserBestillingText: "Alle tolkeoppdrag m√• bestilles i god tid for √• sikre tilgjengelighet. Ved behov for tolketjenester p√• kort varsel vil vi fors√∏ke √• im√∏tekomme foresp√∏rselen, men dette kan ikke garanteres.",
        betingelserAvbestilling: "Alle tolketjenester m√• avbestilles senest 24 timer f√∏r oppdragets start. Ved senere avbestilling vil hele bel√∏pet faktureres.",

        betingelserPriser: "2. Priser og betalingsbetingelser",
        betingelserPriserText: "Prisen p√• tolketjenester avhenger av flere faktorer, inkludert:",
        betingelserPrisType: "Type tolkning (telefontolking, skjermtolking eller personlig oppm√∏te)",
        betingelserPrisTid: "Tidspunkt for oppdraget (ordin√¶r arbeidstid 08:00‚Äì16:00 eller kvelds-/helgetid)",
        betingelserPrisKontakt: "Ta kontakt for et pristilbud tilpasset dine behov. Betaling skjer via faktura med 14 dagers betalingsfrist.",

        betingelserKvalifikasjoner: "3. Kvalifikasjoner og tolkeautorisasjon",
        betingelserKvalifikasjonerText: "Jeg er registrert i Nasjonalt tolkeregister i kategori C, som inneb√¶rer at jeg har best√•tt statsautorisasjonspr√∏ven for tolker i ukrainsk.",
        betingelserKategorierIntro: "I Norge er tolker klassifisert i f√∏lgende kategorier basert p√• kompetanse:",
        betingelserKategoriA: "Kategori A ‚Äì Statsautorisert tolk med fullf√∏rt bachelorgrad i tolking",
        betingelserKategoriB: "Kategori B ‚Äì Statsautorisert tolk eller bachelorgrad i tolking kombinert med grunnemne (30 studiepoeng)",
        betingelserKategoriC: "Kategori C ‚Äì Statsautorisert tolk",
        betingelserKategoriD: "Kategori D ‚Äì Grunnemne i tolking i offentlig sektor (30 studiepoeng)",
        betingelserKategoriE: "Kategori E ‚Äì Best√•tt Tospr√•ktesten med kurs i tolkeetikk og ansvarsbevissthet (TAO)",

        betingelserHvorforTolk: "4. Hvorfor bruke en registrert tolk?",
        betingelserHvorforTolkText: "Nasjonalt tolkeregister er et offentlig register over kvalifiserte tolker i Norge. En registrert tolk har dokumentert kompetanse, kjennskap til tolkeetiske retningslinjer og er underlagt kravene i Tolkeloven. Dette sikrer kvalitet, n√∏ytralitet og profesjonell utf√∏relse av tolkeoppdrag.",

        betingelserKontakt: "5. Kontakt",
        betingelserKontaktText: "For sp√∏rsm√•l om betingelser, vennligst kontakt meg p√•:\nüìß marinakarlsen5@gmail.com"
    },
    uk: {
        header: "–ó–∞–º–æ–≤–∏—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫—ñ –ø–æ—Å–ª—É–≥–∏",
        datoLabel: "–î–∞—Ç–∞:",
        starttidLabel: "–ß–∞—Å –ø–æ—á–∞—Ç–∫—É:",
        sluttidLabel: "–ß–∞—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è:",
        adresseLabel: "–ê–¥—Ä–µ—Å–∞ (—è–∫—â–æ –æ—á–Ω–æ):",
        oppdragstypeLabel: "–¢–∏–ø –ø–µ—Ä–µ–∫–ª–∞–¥—É:",
        temaLabel: "–¢–µ–º–∞:",
        kundeinfoLabel: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞:",
        epostLabel: "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞:",
        telefonLabel: "–¢–µ–ª–µ—Ñ–æ–Ω:",
        notaterLabel: "–ù–æ—Ç–∞—Ç–∫–∏:",
        sendButton: "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç",
        formSuccess: "–í–∞—à –∑–∞–ø–∏—Ç –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!",

        navBestill: "–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É",
        navTjenester: "–ü–æ—Å–ª—É–≥–∏",
        navOmMeg: "–ü—Ä–æ –º–µ–Ω–µ",
        navTilbakemeldinger: "–í—ñ–¥–≥—É–∫–∏",
        navBetingelser: "–£–º–æ–≤–∏ —Ç–∞ –ø–æ–ª–æ–∂–µ–Ω–Ω—è",
        navKontakt: "–ö–æ–Ω—Ç–∞–∫—Ç",

        oppdragstelefon: "–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥",
        oppdragsskjerm: "–í—ñ–¥–µ–æ–ø–µ—Ä–µ–∫–ª–∞–¥",
        oppdragsoppm√∏te: "–û—Å–æ–±–∏—Å—Ç–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å",

        tjenesterHeader: "–ü–æ—Å–ª—É–≥–∏",
        tjenesterTelefon: "–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥",
        tjenesterTelefonDesc: "–ï—Ñ–µ–∫—Ç–∏–≤–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —Å–∏—Ç—É–∞—Ü—ñ–π, –¥–µ –æ—Å–æ–±–∏—Å—Ç–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å –Ω–µ —î –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—é.",
        tjenesterSkjerm: "–í—ñ–¥–µ–æ–ø–µ—Ä–µ–∫–ª–∞–¥",
        tjenesterSkjermDesc: "–ó—Ä—É—á–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è –∑—É—Å—Ç—Ä—ñ—á–µ–π —ñ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ–π —á–µ—Ä–µ–∑ –≤—ñ–¥–µ–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º–∏.",
        tjenesterOppmote: "–û—Å–æ–±–∏—Å—Ç–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å",
        tjenesterOppmoteDesc: "–î–ª—è —Å–∏—Ç—É–∞—Ü—ñ–π, —â–æ –≤–∏–º–∞–≥–∞—é—Ç—å –ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ —Ç–∞ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É.",

        tilbakemeldingerHeader: "–í—ñ–¥–≥—É–∫–∏",
        feedbackIntro: "–©–æ –∫–ª—ñ—î–Ω—Ç–∏ –∫–∞–∂—É—Ç—å –ø—Ä–æ –º–æ—ó –ø–æ—Å–ª—É–≥–∏:",

        kontaktHeader: "–ö–æ–Ω—Ç–∞–∫—Ç",
        kontaktText: "–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—é –ø–æ—à—Ç–æ—é –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:",

        betingelserHeader: "–£–º–æ–≤–∏ —Ç–∞ –ø–æ–ª–æ–∂–µ–Ω–Ω—è",
        betingelserBestilling: "1. –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è",
        betingelserBestillingText: "–£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫—ñ –ø–æ—Å–ª—É–≥–∏ –º–∞—é—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏—Å—è –∑–∞–≤—á–∞—Å–Ω–æ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ. –£ —Ä–∞–∑—ñ –ø–æ—Ç—Ä–µ–±–∏ –≤ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–º—É –Ω–∞–¥–∞–Ω–Ω—ñ –ø–æ—Å–ª—É–≥ –º–∏ –Ω–∞–º–∞–≥–∞—Ç–∏–º–µ–º–æ—Å—è –∑–∞–¥–æ–≤–æ–ª—å–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç, –æ–¥–Ω–∞–∫ —Ü–µ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ.",
        betingelserAvbestilling: "–£—Å—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫—ñ –ø–æ—Å–ª—É–≥–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —Å–∫–∞—Å–æ–≤–∞–Ω—ñ –Ω–µ –ø—ñ–∑–Ω—ñ—à–µ –Ω—ñ–∂ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ –¥–æ –ø–æ—á–∞—Ç–∫—É –∑–∞–≤–¥–∞–Ω–Ω—è. –£ —Ä–∞–∑—ñ –ø—ñ–∑–Ω—ñ—à–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç—è–≥—É—î—Ç—å—Å—è –ø–æ–≤–Ω–∞ —Å—É–º–∞.",

        betingelserPriser: "2. –¶—ñ–Ω–∏ —Ç–∞ —É–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏",
        betingelserPriserText: "–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫–∏—Ö –ø–æ—Å–ª—É–≥ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Ö —á–∏–Ω–Ω–∏–∫—ñ–≤, –∑–æ–∫—Ä–µ–º–∞:",
        betingelserPrisType: "–¢–∏–ø –ø–µ—Ä–µ–∫–ª–∞–¥—É (—Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π, –≤—ñ–¥–µ–æ–ø–µ—Ä–µ–∫–ª–∞–¥ –∞–±–æ –æ—Å–æ–±–∏—Å—Ç–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å)",
        betingelserPrisTid: "–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è (–∑–≤–∏—á–∞–π–Ω–∏–π —Ä–æ–±–æ—á–∏–π —á–∞—Å 08:00‚Äì16:00 –∞–±–æ –≤–µ—á—ñ—Ä–Ω—ñ–π/–≤–∏—Ö—ñ–¥–Ω–∏–π —á–∞—Å)",
        betingelserPrisKontakt: "–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–æ–≤–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó. –û–ø–ª–∞—Ç–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –∑–∞ —Ä–∞—Ö—É–Ω–∫–æ–º-—Ñ–∞–∫—Ç—É—Ä–æ—é –∑ —Ç–µ—Ä–º—ñ–Ω–æ–º –æ–ø–ª–∞—Ç–∏ 14 –¥–Ω—ñ–≤.",

        betingelserKvalifikasjoner: "3. –ö–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á–∞",
        betingelserKvalifikasjonerText: "–Ø –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞ –≤ –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–µ—î—Å—Ç—Ä—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á—ñ–≤ —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó C, —â–æ –æ–∑–Ω–∞—á–∞—î, —â–æ —è —Å–∫–ª–∞–ª–∞ —ñ—Å–ø–∏—Ç –Ω–∞ –¥–µ—Ä–∂–∞–≤–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á–∞ –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏.",
        betingelserKategorierIntro: "–£ –ù–æ—Ä–≤–µ–≥—ñ—ó –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á—ñ –ø–æ–¥—ñ–ª—è—é—Ç—å—Å—è –Ω–∞ –ø‚Äô—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —É –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–µ—î—Å—Ç—Ä—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —ó—Ö–Ω—å–æ—ó –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó:",
        betingelserKategoriA: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è A ‚Äì –ü–µ—Ä–µ–∫–ª–∞–¥–∞—á —ñ–∑ –¥–µ—Ä–∂–∞–≤–Ω–æ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–º –±–∞–∫–∞–ª–∞–≤—Ä–∞—Ç–æ–º —É —Å—Ñ–µ—Ä—ñ –ø–µ—Ä–µ–∫–ª–∞–¥—É",
        betingelserKategoriB: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è B ‚Äì –ü–µ—Ä–µ–∫–ª–∞–¥–∞—á —ñ–∑ –¥–µ—Ä–∂–∞–≤–Ω–æ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é –∞–±–æ –±–∞–∫–∞–ª–∞–≤—Ä —É —Å—Ñ–µ—Ä—ñ –ø–µ—Ä–µ–∫–ª–∞–¥—É –≤ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –∑ –±–∞–∑–æ–≤–∏–º –∫—É—Ä—Å–æ–º (30 –∫—Ä–µ–¥–∏—Ç—ñ–≤)",
        betingelserKategoriC: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è C ‚Äì –ü–µ—Ä–µ–∫–ª–∞–¥–∞—á —ñ–∑ –¥–µ—Ä–∂–∞–≤–Ω–æ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é",
        betingelserKategoriD: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è D ‚Äì –ë–∞–∑–æ–≤–∏–π –∫—É—Ä—Å –∑ –ø–µ—Ä–µ–∫–ª–∞–¥—É –≤ –¥–µ—Ä–∂–∞–≤–Ω–æ–º—É —Å–µ–∫—Ç–æ—Ä—ñ (30 –∫—Ä–µ–¥–∏—Ç—ñ–≤)",
        betingelserKategoriE: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è E ‚Äì –£—Å–ø—ñ—à–Ω–æ —Å–∫–ª–∞–¥–µ–Ω–∏–π –î–≤–æ–º–æ–≤–Ω–∏–π —Ç–µ—Å—Ç –∑ –∫—É—Ä—Å–æ–º –∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫–æ—ó –µ—Ç–∏–∫–∏ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ (TAO)",

        betingelserHvorforTolk: "4. –ß–æ–º—É –≤–∞—Ä—Ç–æ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è –¥–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á–∞?",
        betingelserHvorforTolkText: "–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —Ä–µ—î—Å—Ç—Ä –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á—ñ–≤ ‚Äì —Ü–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Ä–µ—î—Å—Ç—Ä –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á—ñ–≤ —É –ù–æ—Ä–≤–µ–≥—ñ—ó. –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á –º–∞—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—É –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å, –∑–Ω–∞–π–æ–º–∏–π –∑ –µ—Ç–∏—á–Ω–∏–º–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—É —Ç–∞ –ø—ñ–¥–ø–∞–¥–∞—î –ø—ñ–¥ –¥—ñ—é –≤–∏–º–æ–≥ –ó–∞–∫–æ–Ω—É –ø—Ä–æ –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫—É –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å. –¶–µ –∑–∞–±–µ–∑–ø–µ—á—É—î —è–∫—ñ—Å—Ç—å, –Ω–µ—É–ø–µ—Ä–µ–¥–∂–µ–Ω—ñ—Å—Ç—å —ñ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥–∞—Ü—å–∫–∏—Ö –∑–∞–≤–¥–∞–Ω—å.",

        betingelserKontakt: "5. –ö–æ–Ω—Ç–∞–∫—Ç",
        betingelserKontaktText: "–ó –ø–∏—Ç–∞–Ω–Ω—è–º–∏ —â–æ–¥–æ —É–º–æ–≤, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è –∑–∞ –∞–¥—Ä–µ—Å–æ—é:\nüìß marinakarlsen5@gmail.com"
    }
};

document.addEventListener("DOMContentLoaded", () => {
    const savedLang = localStorage.getItem("language") || "no";

    // Sjekker om vi er p√• betingelser.html
    if (document.querySelector(".betingelser-container")) {
        updateBetingelserLanguage(savedLang);
    } else {
        updateLanguage(savedLang);
    }

    // Finner spr√•k-knappene
    const langButtons = document.querySelectorAll(".lang-button");

    // Oppdaterer aktiv klasse p√• riktig knapp ved last
    langButtons.forEach(button => {
        if (button.dataset.lang === savedLang) {
            button.classList.add("active");
        }
    });

    // Spr√•kbytte ved klikk
    langButtons.forEach(button => {
        button.addEventListener("click", () => {
            const selectedLang = button.dataset.lang;
            localStorage.setItem("language", selectedLang);

            // Fjerner aktiv klasse fra alle knapper
            langButtons.forEach(btn => btn.classList.remove("active"));
            button.classList.add("active");

            // Oppdater riktig side
            if (document.querySelector(".betingelser-container")) {
                updateBetingelserLanguage(selectedLang);
            } else {
                updateLanguage(selectedLang);
            }
        });
    });
});

// Funksjon for √• oppdatere spr√•ket p√• Betingelser-siden
function updateBetingelserLanguage(lang) {
    document.querySelectorAll("[data-translate]").forEach(element => {
        const key = element.getAttribute("data-translate");
        if (translations[lang] && translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
}

// Sjekk om EmailJS er lastet og initialisert
function checkEmailJS() {
    if (typeof emailjs === 'undefined') {
        console.error('EmailJS er ikke lastet inn!');
        alert('En feil oppstod. EmailJS er ikke initialisert.');
        return false; // Indikerer feil
    }
    emailjs.init('bFcwSKHQToHSyB7aX'); // Din Public API Key
    console.log('EmailJS er initialisert med den nyeste SDK-en');
    return true; // Indikerer suksess
}

// Kj√∏r sjekk for EmailJS
if (document.querySelector(".contact-form")) {
    if (!checkEmailJS()) {
        throw new Error("EmailJS ble ikke initialisert. Kontroller innstillingene dine.");
    }
}

// Dynamisk logo-effekt ved scrolling
const logoContainer = document.querySelector('.logo-container');

window.addEventListener('scroll', () => {
    if (window.scrollY > 50) {
        logoContainer.classList.add('shrink');
    } else {
        logoContainer.classList.remove('shrink');
    }
});

// Gj√∏r logoen klikkbar og sender brukeren til toppen
const logoLink = document.querySelector('.logo-container a');
logoLink.addEventListener('click', (e) => {
    e.preventDefault();
    window.scrollTo({ top: 0, behavior: 'smooth' });
});

// Legg til smooth scrolling for navigasjonslenker
const navLinks = document.querySelectorAll('.sticky-nav a');

navLinks.forEach(link => {
    link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');

        // Hvis lenken starter med "#", scroll til seksjonen
        if (href.startsWith("#")) {
            e.preventDefault();
            const targetId = href.substring(1);
            const targetSection = document.getElementById(targetId);
            if (targetSection) {
                targetSection.scrollIntoView({ behavior: 'smooth' });
            }
        }
    });
});

// Aktiver interaktiv karusell for tilbakemeldinger (hvis det er flere elementer)
const feedbackCarousel = document.querySelector('.feedback-carousel');
if (feedbackCarousel) {
    feedbackCarousel.addEventListener('wheel', (e) => {
        e.preventDefault();
        feedbackCarousel.scrollLeft += e.deltaY;
    });
}

// EmailJS integrasjon for skjemaet
document.addEventListener("DOMContentLoaded", () => {
    const contactForm = document.querySelector(".contact-form");
    if (contactForm) {
        contactForm.addEventListener("submit", function (e) {
            e.preventDefault(); // Hindrer standard skjemaoppf√∏rsel

            // Hent spr√•ket som er valgt (fra localStorage eller default til "no")
            const selectedLanguage = localStorage.getItem("language") || "no";

            // Samle inn data fra skjemaet
            const form = e.target;
            const formData = {
                dato: form.dato.value,
                starttid: form.starttid.value,
                sluttid: form.sluttid.value,
                adresse: form.adresse.value,
                oppdragstype: form.oppdragstype.value,
                tema: form.tema.value,
                kundeinfo: form.kundeinfo.value,
                epost: form.epost.value,
                telefon: form.telefon.value,
                notater: form.notater.value,
                language: selectedLanguage === "no" ? "Norsk" : "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞" // Legger til valgt spr√•k
            };

            // Send data til EmailJS via fetch
            console.log("Formdata som sendes:", formData);
            fetch("https://api.emailjs.com/api/v1.0/email/send", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    service_id: "service_p7gp21t", // Min Service ID
                    template_id: "template_weqmq4a", // Min Template ID
                    user_id: "bFcwSKHQToHSyB7aX", // Min Public API Key
                    template_params: formData // Sender formData med dato, starttid og sluttid
                })
            })
                .then(response => {
                    if (response.ok) {
                        alert(translations[selectedLanguage].formSuccess);
                        form.reset(); // Nullstill skjemaet
                    } else {
                        return response.text().then(error => {
                            throw new Error(`Feil ved sending av e-post: ${error}`);
                        });
                    }
                })
                .catch(error => {
                    console.error("Feil ved sending av e-post:", error);
                    alert(`Noe gikk galt: ${error.message}`);
                });
        });
    }
});

// Hent versjonsnummeret fra version.json og vis det i versjonsloggen
fetch('version.json') // Hent version.json
    .then(response => {
        if (!response.ok) {
            throw new Error('Kunne ikke laste versjonsinformasjon');
        }
        return response.json(); // Konverter JSON-innhold til et objekt
    })
    .then(data => {
        // Sett versjonsnummeret i HTML-elementet med id="version-log"
        const versionLogElement = document.querySelector("#version-log");
        if (versionLogElement) {
            versionLogElement.textContent = `Versjon: ${data.version}`;
        }
    })
    .catch(error => {
        console.error('Feil ved lasting av versjonsinformasjon:', error);
    });
    
    // Funksjon for √• oppdatere spr√•k
    function updateLanguage(lang) {
        // Sjekker om den er p√• betingelser.html
        if (document.querySelector(".betingelser-container")) {
        document.querySelector(".betingelser-container h1").textContent = translations[lang].betingelserTitle;
        document.querySelector(".betingelser-container p").textContent = translations[lang].betingelserIntro;
        return; // Stopp videre kj√∏ring p√• denne siden
        }

        document.querySelector("nav ul li:nth-child(5) a").textContent = translations[lang].navBetingelser;

        // Hvis vi er p√• betingelser-siden, oppdater overskriften og teksten
        if (document.querySelector(".betingelser-container")) {
            const betingelserTitle = document.querySelector(".betingelser-container h1");
            const betingelserIntro = document.querySelector(".betingelser-container p");
        
            if (betingelserTitle) {
                betingelserTitle.textContent = translations[lang].betingelserTitle;
            }
            if (betingelserIntro) {
                betingelserIntro.textContent = translations[lang].betingelserIntro;
            }
        }
        
        document.querySelector("#bestill-header").textContent = translations[lang].header;
        document.querySelector("label[for='dato']").textContent = translations[lang].datoLabel;
        document.querySelector("label[for='starttid']").textContent = translations[lang].starttidLabel;
        document.querySelector("label[for='sluttid']").textContent = translations[lang].sluttidLabel;
        document.querySelector("label[for='adresse']").textContent = translations[lang].adresseLabel;
        document.querySelector("label[for='oppdragstype']").textContent = translations[lang].oppdragstypeLabel;
        document.querySelector("label[for='tema']").textContent = translations[lang].temaLabel;
        document.querySelector("label[for='kundeinfo']").textContent = translations[lang].kundeinfoLabel;
        document.querySelector("label[for='epost']").textContent = translations[lang].epostLabel;
        document.querySelector("label[for='telefon']").textContent = translations[lang].telefonLabel;
        document.querySelector("label[for='notater']").textContent = translations[lang].notaterLabel;
    
        // Henter riktig knapp for "Send foresp√∏rsel"
        const sendButton = document.querySelector(".contact-form button");
        if (sendButton) {
            sendButton.textContent = translations[lang].sendButton;
        }
    
        // Navigasjonsmeny
        document.querySelector("nav ul li:nth-child(1) a").textContent = translations[lang].navBestill;
        document.querySelector("nav ul li:nth-child(2) a").textContent = translations[lang].navTjenester;
        document.querySelector("nav ul li:nth-child(3) a").textContent = translations[lang].navOmMeg;
        document.querySelector("nav ul li:nth-child(4) a").textContent = translations[lang].navTilbakemeldinger;
        document.querySelector("nav ul li:nth-child(5) a").textContent = translations[lang].navBetingelser;
        document.querySelector("nav ul li:nth-child(6) a").textContent = translations[lang].navKontakt;
    
        // Oppdaterer oppdragstype i skjemaet
        document.querySelector("#oppdragstype option[value='telefontolking']").textContent = translations[lang].oppdragstelefon;
        document.querySelector("#oppdragstype option[value='skjermtolking']").textContent = translations[lang].oppdragsskjerm;
        document.querySelector("#oppdragstype option[value='personlig']").textContent = translations[lang].oppdragsoppm√∏te;
    
        // Tjenester-seksjonen
        document.querySelector("#tjenester h2").textContent = translations[lang].tjenesterHeader;
        document.querySelector("#tjenester .service:nth-child(1) h3").textContent = translations[lang].tjenesterTelefon;
        document.querySelector("#tjenester .service:nth-child(1) p").textContent = translations[lang].tjenesterTelefonDesc;
        document.querySelector("#tjenester .service:nth-child(2) h3").textContent = translations[lang].tjenesterSkjerm;
        document.querySelector("#tjenester .service:nth-child(2) p").textContent = translations[lang].tjenesterSkjermDesc;
        document.querySelector("#tjenester .service:nth-child(3) h3").textContent = translations[lang].tjenesterOppmote;
        document.querySelector("#tjenester .service:nth-child(3) p").textContent = translations[lang].tjenesterOppmoteDesc;
    
        // Tilbakemeldinger-seksjonen
        document.querySelector("#tilbakemeldinger h2").textContent = translations[lang].tilbakemeldingerHeader;
        document.querySelector("#tilbakemeldinger p").textContent = translations[lang].feedbackIntro;
    
        // Kontakt-seksjonen
        document.querySelector("#kontakt h2").textContent = translations[lang].kontaktHeader;
        document.querySelector("#kontakt p").textContent = translations[lang].kontaktText;
    
        // E-post og telefon i kontaktseksjonen
        const kontaktInfo = document.querySelectorAll("#kontakt li");
        if (kontaktInfo.length >= 2) {
            kontaktInfo[0].innerHTML = `<i class="fa fa-envelope"></i> ${translations[lang].epostLabel} <a href="mailto:marinakarlsen5@gmail.com">marinakarlsen5@gmail.com</a>`;
            kontaktInfo[1].innerHTML = `<i class="fa fa-phone"></i> ${translations[lang].telefonLabel} <a href="tel:+4746930229">+47 469 30 229</a>`;
        }
    }    

// Spr√•k-oppdatering for Betingelser-siden
function updateBetingelserLanguage(lang) {
    document.querySelectorAll("[data-translate]").forEach((element) => {
        const key = element.getAttribute("data-translate");
        if (translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
}

// Oppdater spr√•k n√•r siden lastes
document.addEventListener("DOMContentLoaded", () => {
    const savedLang = localStorage.getItem("language") || "no";
    updateBetingelserLanguage(savedLang);
});

// üîπ Funksjon for √• oppdatere spr√•ket p√• Betingelser-siden
function updateBetingelserLanguage(lang) {
    document.querySelectorAll("[data-translate]").forEach((element) => {
        const key = element.getAttribute("data-translate");
        if (translations[lang] && translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
}

// Spr√•k-knapper som oppdaterer b√•de hovedsiden og Betingelser-siden
document.addEventListener("DOMContentLoaded", () => {
    const langButtons = document.querySelectorAll(".lang-button");
    const savedLang = localStorage.getItem("language") || "no";

    // Sett aktiv klasse p√• riktig knapp ved last
    langButtons.forEach(button => {
        if (button.dataset.lang === savedLang) {
            button.classList.add("active");
        }
    });

    // Oppdater spr√•k p√• riktig side
    if (document.querySelector(".betingelser-container")) {
        updateBetingelserLanguage(savedLang);
    } else {
        updateLanguage(savedLang);
    }

    // Spr√•kbytte ved klikk
    langButtons.forEach(button => {
        button.addEventListener("click", () => {
            const selectedLang = button.dataset.lang;

            // Lagre spr√•k i nettleser
            localStorage.setItem("language", selectedLang);

            // Oppdater aktiv klasse
            langButtons.forEach(btn => btn.classList.remove("active"));
            button.classList.add("active");

            // Oppdater spr√•k p√• riktig side
            if (document.querySelector(".betingelser-container")) {
                updateBetingelserLanguage(selectedLang);
            } else {
                updateLanguage(selectedLang);
            }
        });
    });
});

function updateBetingelserLanguage(lang) {
    if (!translations[lang]) return;

    document.querySelectorAll("[data-translate]").forEach((element) => {
        const key = element.getAttribute("data-translate");
        if (translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
}